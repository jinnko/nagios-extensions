#!/usr/bin/perl

# Adapted from Duane Wessels' original script
#
# check_whois_status
#
# nagios plugin to check the expiration date of a domain.

# usage
#
# define command {
#   command_name	check-whois-status
#   command_line	/usr/local/libexec/nagios-local/check_whois_status $HOSTADDRESS$
# }
#
# define service {
#   name				   whois-status-service
#   check_command		  check-whois-status
#   ...
# }
#
# define host {
#   use dns-zone
#   host_name zone.example.com
#   alias ZONE example.com
# }
#
# define service {
#   use whois-service
#   host_name zone.example.com
# }


use strict;
use warnings;

use Getopt::Std;
use Date::Manip;
use POSIX qw(strftime);

my %opts;
getopts('x', \%opts);

#if ($opts->{h}) {
#	# Print version number
#	print "2";
#	exit 0;
#}
my $debug = 0;
my $name = shift or die "usage: $0 domain\n";
$name =~ s/^zone\.//;
grok($name);
exit 0;

sub grok {
	my $name = shift || die;
	$_ = `whois -H $name`;
	my $registrar = undef;
	my $expires = undef;
	my $status = '';
	print STDERR "checking $name\n" if ($debug);
	tr/A-Z/a-z/;

	if ( /no match/ ) {
		critical("No match found for $name");
	} else {
		if (/registrar:\n\s+(.*)$/m) {
			$registrar = "$1";
		} elsif (/registrar:\s+(.*)$/m) {
			$registrar = "$1";
		} elsif (/registrar id:\s*(.*)$/m) {
			$registrar = $1;
		} elsif (/sponsoring registrar:\s*(.*)$/m) {
			$registrar = $1;
		} elsif (/registrar handle\.*:\s*(.*)$/m) {
			$registrar = $1;
		}

		if (/expiration date:\s*(\d\d-\w\w\w-\d\d\d\d)/m) {
			$expires = $1;
		} elsif (/record expires on ([^\.\n]*)$/m) {
			$expires = $1;
		} elsif (/^expires:\s+([-\w\n]+)$/m) {
			$expires = $1;
		} elsif (/^domain expiration date:\s+([^\.\n]*)$/m) {
			$expires = $1;
		} elsif (/renewal date:\s+([^\.\n]*)$/m) {
			$expires = $1;
		} elsif (/expiration date:\s+([^\.\n]*)$/m) {
			$expires = $1;
		} elsif (/expiry date:\s+([^\.\n]*)$/m) {
			$expires = $1;
		}

		$status = $1 if (/status:\s*(.*)$/m);
		$status = "unknown" unless $status;
	}

	if (defined $registrar) {
		$registrar = 'gandi' if ($registrar eq 'r42-lror');
		$registrar = 'go daddy' if ($registrar =~ /go daddy/);
		$registrar = 'go daddy' if ($registrar eq 'r91-lror');
	} elsif (defined $opts{x}) {
		$registrar = 'UNKNOWN';
	} else {
		$registrar = 'UNKNOWN';
		#critical("Didn't find Registrar");
	}

	my $t;
	if (defined $expires) {
		$t = UnixDate($expires, "%s");
		critical("Invalid expiration time '$expires'") unless defined $t;
		critical("Unknown expiration time '$expires'") if ($t < 0);
		$expires = strftime("%Y-%m-%d", localtime($t));
	}

	critical("$name registered with '$registrar' has status '$status' and expires '$expires'.") if ($t - time < (86400*7));
	warning ("$name registered with '$registrar' has status '$status' and expires '$expires'.") if ($t - time < (86400*28));
	success ("$name registered with '$registrar' has status '$status' and expires '$expires'.");
}

sub success {
	output('OK', shift);
	exit(0);
}

sub warning {
	output('WARNING', shift);
	exit(1);
}

sub critical {
	output('CRITICAL', shift);
	exit(2);
}

sub output {
	my $state = shift;
	my $msg = shift;
	printf "WHOIS %s: %s\n", $state, $msg;
}
