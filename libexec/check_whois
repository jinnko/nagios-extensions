#!/usr/bin/perl

# (C) Duane Wessels, wessels@measurement-factory.com
#
# $Id: check_whois,v 1.3 2008/07/11 00:23:33 wessels Exp $
#
# check_whois
#
# nagios plugin to check the expiration date of a domain.
# vim:set ts=4 sw=4 sts=4 noexpandtab:

# usage
#
# define command {
#   command_name	check-whois
#   command_line	/usr/local/libexec/nagios-local/check_whois $HOSTADDRESS$
# }
#
# define service {
#   name				  whois-service
#   check_command		  check-whois
#   ...
# }
#
# define host {
#   use dns-zone
#   host_name zone.example.com
#   alias ZONE example.com
# }
#
# define service {
#   use whois-service
#   host_name zone.example.com
# }


use strict;
use warnings;

use Getopt::Std;
use Date::Manip;
use POSIX qw(strftime);

my %opts;
getopts('xd', \%opts);

#if ($opts->{h}) {
#	# Print version number
#	print "2";
#	exit 0;
#}
my $debug = 0;
my $name = shift or die "usage: $0 domain\n";
$name =~ s/^zone\.//;
grok($name);
exit 0;

sub grok {
	my $name = shift || die;
	open (CMD, "jwhois -f $name|") || die;
	my $registrar = undef;
	my $expires = undef;
	my $status = '';
	my $whois = '';
	print STDERR "checking $name\n" if ($debug);
	while (<CMD>) {
		tr/A-Z/a-z/;
		s/\r\n$/\n/;
		$whois = $whois . $_;
		if (/Registrar:\s*(.+)/i) {
			$registrar = $1;
		} elsif (/Registrar ID:\s*(.+)/i) {
			$registrar = $1;
		} elsif (/Registrar Handle\.*:\s*(.+)/i) {
			$registrar = $1;
		} elsif (/Registrar:\s*(.+)/m) {
			$registrar = $1;
		}

		if (/expiration date:\s*(\d\d-\w\w\w-\d\d\d\d)/i) {
			$expires = $1;
		} elsif (/record expires on (.*)/i) {
			$expires = $1;
		} elsif (/^expires:\s+([-\w]+)/i) {
			$expires = $1;
		} elsif (/^domain expiration date:\s+(.*)/i) {
			$expires = $1;
		} elsif (/Renewal date:\s+(.*)/i) {
			$expires = $1;
		} elsif (/Expiration Date:\s+(.*)/i) {
			$expires = $1;
		} elsif (/Domain Expires on:\s+(.*)/i) {
			$expires = $1;
		}
	}
	close(CMD);

	if (defined $registrar && length($registrar)) {
		$registrar = 'gandi' if ($registrar eq 'r42-lror');
		$registrar = 'go daddy' if ($registrar =~ /go daddy/);
		$registrar = 'go daddy' if ($registrar eq 'r91-lror');
	} elsif ( $whois =~ /registrar:\s*\n\s*(.+?)$/msi ) {
		$registrar = $1;
	} elsif (defined $opts{x}) {
		$registrar = 'UNKNOWN';
	} else {
		$registrar = 'UNKNOWN';
	}

	my $t;
	if (defined $expires) {
			$t = UnixDate($expires, "%s");
			critical("Invalid expiration time '$expires'") unless defined $t;
			critical("Invalid expiration time '$expires'") if ($t < 0);
			$expires = strftime("%Y-%m-%d", localtime($t));
	} elsif (defined $opts{x}) {
		$t = time + (86400 * 90);
		$expires = 'UNKNOWN';
	} else {
			critical("Didn't find expiration timestamp");
	}

		critical("Expires $expires registered at $registrar") if ($t - time < (86400*7));
		warning ("Expires $expires registered at $registrar") if ($t - time < (86400*28));
		success ("Expires $expires registered at $registrar");
}

sub success {
		output('OK', shift);
		exit(0);
}

sub warning {
		output('WARNING', shift);
		exit(1);
}

sub critical {
		output('CRITICAL', shift);
		exit(2);
}

sub output {
		my $state = shift;
		my $msg = shift;
		printf "WHOIS %s: %s\n", $state, $msg;
}
