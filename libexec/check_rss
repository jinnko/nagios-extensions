#!/usr/bin/python

import httplib
import time
import feedparser
import cPickle
from sys import exit

feed_url = {"host": "www.raspberrypi.org", "path": "/feed/rss2"}
pkl_path = '/tmp/raspberrypi.pkl'

def load_persistence():
    try:
        f_pkl = open(pkl_path, 'rb')
        prev_mod, title = cPickle.load(f_pkl)
        f_pkl.close()
        return prev_mod, title

    except IOError, e:
        return None

def save_persistence(last_mod, title):
    f_pkl = open(pkl_path, 'wb')
    cPickle.dump([last_mod, title], f_pkl, -1)
    f_pkl.close()

def latest_post():
    try:
        feed = feedparser.parse('http://%s%s'%(feed_url["host"], feed_url["path"]))
    except:
        print "Failed to fetch latest post title"
        exit(0)

    try:
        title = feed.entries[0]["title"]
    except:
        print "Fetched feed data incomplete."
        exit(0)

    return title

def main():
    conn = httplib.HTTPConnection(feed_url["host"])
    conn.request("HEAD", feed_url["path"])
    try:
        res = conn.getresponse()
    except:
        print "Check failed."
        exit(0)

    if res.status == 500:
        print "Internal Server Error"
        exit(0)

    # Extract the "last-modified" header and convert to a tuple
    last_modified = res.getheader('last-modified')
    try:
        last_mod = time.strptime(last_modified, '%a, %d %b %Y %H:%M:%S %Z')
    except Exception, e:
        print "Failed to fetch RSS HEAD."
        print e
        exit(0)

    title = latest_post()

    # Get the previous last_modified value
    prev_mod, title = load_persistence()

    if prev_mod == last_mod or prev_title == title:
        print "No new posts found since %s." % ( time.strftime('%Y-%m-%d %H:%M', last_mod) )
        exit(0)

    if prev_mod is None:
        save_persistence(last_mod, title)


    print "New post published on %s: %s.  Log in to ht-mn-1 and 'rm %s' to clear this nag." % (time.strftime('%Y-%m-%d %H:%M', last_mod), title, pkl_path)
    exit(2)

if __name__ == "__main__":
    main()
